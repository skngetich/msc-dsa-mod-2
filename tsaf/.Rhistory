#pacf(tsm_close,main="kkk")
kingsSMA3 <- decompose(tsm_close)
dy = diff(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
#par(mfrow=c(1,2))
#acf(tsm_close,main="kkk")
#pacf(tsm_close,main="kkk")
par(mfrow=c(1,2))
acf(tsm_close,main="kkk")
pacf(tsm_close,main="kkk")
#dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
par(mfrow=c(1,2))
acf(tsm_close,main="kkk")
pacf(tsm_close,main="kkk")
#dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
par(mfrow=c(1,2))
acf(dy,main="kkk")
View(dy)
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
par(mfrow=c(1,2))
acf(dy,main="kkk")
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
par(mfrow=c(1,2))
acf(dy,main="kkk")
rm(list=ls())
#install.packages('quantmod')
#install.packages('TTR')
#suppress `getStmbols` message
options("getSymbols.warning4.0"=FALSE)
library(fpp2)
library('TTR')
library('quantmod')
#Download data from yahoo finance
df_tsm <- getSymbols('TSM',src='yahoo',auto.assign=FALSE,from="2011-01-01")
#Check the contents of the data
class(df_tsm)
#List the number of rows in the data
nrow(df_tsm)
#Print the last 6 rows of the data
tail(df_tsm)
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
tsm_close = df_tsm$TSM.Close
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
par(mfrow=c(1,2))
acf(tsm_close,main="kkk")
pacf(tsm_close,main="kkk")
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
par(mfrow=c(1,2))
acf(dy,main="kkk")
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
par(mfrow=c(1,2))
acf(dy)
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
ggseasonplot(dy)
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
ggseasonplot(x=dy)
par(mfrow=c(1,2))
acf(tsm_close, lag=40,main="kkk")
pacf(tsm_close,main="kkk")
par(mfrow=c(1,2))
acf(tsm_close, lag=1000,main="kkk")
pacf(tsm_close,main="kkk")
par(mfrow=c(1,2))
acf(tsm_close, lag=200,main="kkk")
pacf(tsm_close,main="kkk")
par(mfrow=c(1,2))
acf(tsm_close, lag=200,main="kkk")
pacf(tsm_close ,lag=200,main="kkk")
par(mfrow=c(1,2))
acf(tsm_close, lag=100,main="kkk")
pacf(tsm_close ,lag=100,main="kkk")
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close ,lag=100)
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
i
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
is.ts(dy)
#ggseasonplot(x=dy)
#par(mfrow=c(1,2))
#acf(dy)
#pacf(dy)
dy = diff(tsm_close)
#chart_Series(dy,name="Time Plot of difference data")
plot.ts(dy)
#ggseasonplot(x=dy)
#par(mfrow=c(1,2))
#acf(dy)
#pacf(dy)
dy = diff(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
plot.ts(dy)
#ggseasonplot(x=dy)
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close ,lag=100)
dy = diff(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
plot.ts(dy)
#ggseasonplot(x=dy)
par(mfrow=c(1,2))
acf(dy, lag=100)
dy = diff(tsm_close,lag=1)
chart_Series(dy,name="Time Plot of difference data")
plot.ts(dy)
#ggseasonplot(x=dy)
par(mfrow=c(1,2))
acf(dy, lag=100)
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
plot.ts(dy)
#ggseasonplot(x=dy)
par(mfrow=c(1,2))
acf(dy, lag=100)
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
#ggseasonplot(x=dy)
par(mfrow=c(1,2))
acf(dy, lag=100)
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
add_MACD()
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
tsm_close = df_tsm$TSM.Close
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
add_MACD()
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
tsm_close = df_tsm$TSM.Close
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
ggseasonplot(x=as.xts(dy))
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
ggseasonplot(x=as.ts(dy))
library(fpp2)
library('TTR')
library('quantmod')
library(ggplot2)
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
tsm_close = df_tsm$TSM.Adjusted
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
tsm_close = df_tsm$TSM.Adjusted
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close ,lag=100)
dy = diff.xts(tsm_close)
chart_Series(dy,name="Time Plot of difference data")
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = log(w/w(-1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = log(tsm_close/tsm_close(-1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of difference data")
par(mfrow=c(1,2))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of difference data")
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of log difference data")
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
plot(wld,name="Time Plot of log difference data")
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of log difference data")
checkresiduals(wld)
checkresiduals(tsm_close)
checkresiduals(tsm_close)
fit_arima = auto.arima(tsm_close,d=1,D=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
# differencing is set to 1 d=1
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
# differencing is set to 1 d=1
# TRACE prints out all models that have been tried
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
print(summaty(fit_arima))
# differencing is set to 1 d=1
# TRACE prints out all models that have been tried
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
print(summary(fit_arima))
try(checkresiduals(tsm_close))
try(checkresiduals(tsm_close))
rm(list=ls())
requiredPackages = c('quantmod','TTR','tseries')
for(p in requiredPackages){
if(!require(p,character.only = TRUE)) install.packages(p) #install package if it does not exist
library(p,character.only = TRUE)
}
#suppress `getSymbols` message
options("getSymbols.warning4.0"=FALSE)
library(fpp2)
library(TTR)
library(quantmod)
library(ggplot2)
library(tseries)
#Download data from yahoo finance
df_tsm <- getSymbols('TSM',src='yahoo',auto.assign=FALSE,from="2011-01-01")
#Check the contents of the data
class(df_tsm)
#List the number of rows in the data
nrow(df_tsm)
#Print the last 6 rows of the data
tail(df_tsm)
#Download data from yahoo finance
df_tsm <- getSymbols('TSM',src='yahoo',auto.assign=FALSE,from="2011-01-01")
#Check the contents of the data
class(df_tsm)
#List the number of rows in the data
nrow(df_tsm)
#Print the last 6 rows of the data
tail(df_tsm)
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
chartSeries(df_tsm , name="TSM price 2011-2022")
#returns the closing price
tsm_close = Cl(to.monthly(df_tsm))
#decompose the data
dc <- decompose(as.ts(tsm_close, start=c(2011,1)))
plot(dc)
#Display seasonal stock data
dc$seasonal
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close ,lag=100)
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of log difference data")
adf.test(tsm_close)
# differencing is set to 1 d=1
# TRACE prints out all models that have been tried
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
print(summary(fit_arima))
checkresiduals(fit_arima,plot=TRUE)
rm(list=ls())
requiredPackages = c('quantmod','TTR','tseries')
for(p in requiredPackages){
if(!require(p,character.only = TRUE)) install.packages(p) #install package if it does not exist
library(p,character.only = TRUE)
}
#suppress `getSymbols` message
options("getSymbols.warning4.0"=FALSE)
rm(list=ls())
requiredPackages = c('quantmod','TTR','tseries')
for(p in requiredPackages){
if(!require(p,character.only = TRUE)) install.packages(p) #install package if it does not exist
library(p,character.only = TRUE)
}
#suppress `getSymbols` message
options("getSymbols.warning4.0"=FALSE)
library(fpp2)
library(fpp2)
library(fpp2)
library(TTR)
library(quantmod)
library(ggplot2)
library(tseries)
#Download data from yahoo finance
df_tsm <- getSymbols('TSM',src='yahoo',auto.assign=FALSE,from="2011-01-01")
#Check the contents of the data
class(df_tsm)
#List the number of rows in the data
nrow(df_tsm)
#Print the last 6 rows of the data
tail(df_tsm)
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
chartSeries(df_tsm , name="TSM price 2011-2022")
#returns the closing price
tsm_close = Cl(to.monthly(df_tsm))
#decompose the data
dc <- decompose(as.ts(tsm_close, start=c(2011,1)))
plot(dc)
#Display seasonal stock data
dc$seasonal
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close ,lag=100)
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of log difference data")
adf.test(tsm_close)
# differencing is set to 1 d=1
# TRACE prints out all models that have been tried
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = FALSE)
print(summary(fit_arima))
checkresiduals(fit_arima,plot=TRUE)
fcst =  forecast(fit_arima, level=c(95),h=24)
autoplot(fcst) +   scale_x_continuous()
#plot.fo
fcst =  forecast(fit_arima,h=24)
autoplot(fcst)
#plot.fo
fcst =  forecast(fit_arima,h=24)
autoplot(fcst,include = 180)
#plot.fo
fcst =  forecast(fit_arima,h=24)
autoplot(fcst,include = 100)
#plot.fo
fcst =  forecast(fit_arima,h=24)
autoplot(fcst,include = 50)
#plot.fo
adf.test(dy)
rm(list=ls())
requiredPackages = c('quantmod','TTR','tseries')
for(p in requiredPackages){
if(!require(p,character.only = TRUE)) install.packages(p) #install package if it does not exist
library(p,character.only = TRUE)
}
#suppress `getSymbols` message
options("getSymbols.warning4.0"=FALSE)
library(fpp2)
library(TTR)
library(quantmod)
library(ggplot2)
library(tseries)
#Download data from yahoo finance
df_tsm <- getSymbols('TSM',src='yahoo',auto.assign=FALSE,from="2011-01-01")
#Check the contents of the data
class(df_tsm)
#List the number of rows in the data
nrow(df_tsm)
#Print the last 6 rows of the data
tail(df_tsm)
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
chartSeries(df_tsm , name="TSM price 2011-2022")
#returns the closing price
tsm_close = Cl(to.monthly(df_tsm))
#decompose the data
dc <- decompose(as.ts(tsm_close, start=c(2011,1)))
plot(dc)
#Display seasonal stock data
dc$seasonal
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close ,lag=100)
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of log difference data")
View(dy)
View(dy)
dy[:-1]
dy[-1]
dy[0]
dy[1]
dy[2:-1]
dy[2:]
dy[2,]
f < ts(dy)
f = ts(dy)
adf.test(f)
f = xts(dy)
adf.test(f)
f = xts(dy$df_tsm.Close)
adf.test(f)
f = ts(dy)
adf.test(f)
f = as.ts(dy)
adf.test(f)
class(dy)
dy$df_tsm.Close
lag(dy)
lag(dy,-2)
lag(dy,-1)
adf.test(diff(tsm_close))
adf.test(diff(tsm_close) ,k=1)
par(mfrow=c(1,2))
acf(tsm_close)
pacf(tsm_close ,lag=100)
par(mfrow=c(1,2))
acf(tsm_close)
pacf(tsm_close)
f = snaive(dy)
print(summary(f))
checkresiduals(f,plot = TRUE)
# differencing is set to 1 d=1
# TRACE prints out all models that have been tried
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = FALSE)
print(summary(fit_arima))
checkresiduals(fit_arima,plot=TRUE)
fcst =  forecast(fit_arima,h=24)
autoplot(fcst)
fcst =  forecast(fit_arima, h=24, findfrequency = TRUE)
autoplot(fcst)
is.na(wld)
wld[is.na(wld)]
wld[!is.na(wld)]
adf.test(wld[!is.na(wld)])
par(mfrow=c(1,2))
acf(tsm_close)
pacf(tsm_close)
adf.test(tsm_close)
par(mfrow=c(1,2))
acf(tsm_close)
pacf(tsm_close)
adf.test(wld[!is.na(wld)])
par(mfrow=c(1,2))
acf(tsm_close, lag=10)
pacf(tsm_close, lag=10)
par(mfrow=c(1,2))
acf(tsm_close, lags=10)
pacf(tsm_close, lags=10)
par(mfrow=c(1,2))
acf(tsm_close, lag=100)
pacf(tsm_close, lag=100)
rm(list=ls())
requiredPackages = c('quantmod','TTR','tseries')
for(p in requiredPackages){
if(!require(p,character.only = TRUE)) install.packages(p) #install package if it does not exist
library(p,character.only = TRUE)
}
#suppress `getSymbols` message
options("getSymbols.warning4.0"=FALSE)
library(fpp2)
library(TTR)
library(quantmod)
library(ggplot2)
library(tseries)
#Download data from yahoo finance
df_tsm <- getSymbols('TSM',src='yahoo',auto.assign=FALSE,from="2011-01-01")
#Check the contents of the data
class(df_tsm)
#List the number of rows in the data
nrow(df_tsm)
#Print the last 6 rows of the data
tail(df_tsm)
tsm_title = "Taiwan Semiconductor Manufacturing Company Limited Stock Price (TSM) (2011-2022)"
chartSeries(df_tsm , name="TSM price 2011-2022")
#returns the closing price
tsm_close = Cl(to.monthly(df_tsm))
#decompose the data
dc <- decompose(as.ts(tsm_close, start=c(2011,1)))
plot(dc)
#Display seasonal stock data
dc$seasonal
#plot(df_tsm$TSM.Close,main = tsm_title)
chart_Series(tsm_close,name=tsm_title)
adf.test(tsm_close)
par(mfrow=c(1,2))
acf(tsm_close)
pacf(tsm_close)
par(mfrow=c(2,1))
dy = diff(tsm_close,lag = 1)
chart_Series(dy,name="Time Plot of difference data")
wld = diff(log(tsm_close))
chart_Series(wld,name="Time Plot of log difference data")
adf.test(wld[!is.na(wld)])
# differencing is set to 1 d=1
# if TRACE = TRUE prints out all models that have been tried
fit_arima = auto.arima(tsm_close,d=1,stepwise = FALSE,approximation = FALSE,trace = TRUE)
print(summary(fit_arima))
checkresiduals(fit_arima,plot=TRUE)
fcst =  forecast(fit_arima, h=24, findfrequency = TRUE)
autoplot(fcst)
fcst =  forecast(fit_arima, h=24, find.frequency = TRUE)
autoplot(fcst)
fcst =  forecast(fit_arima, h=24, ,level=c(95) find.frequency = TRUE)
fcst =  forecast(fit_arima, h=24, ,level=c(95), find.frequency = TRUE)
autoplot(fcst)
fcst =  forecast(fit_arima, h=24, ,level=c(95))
autoplot(fcst)
fcst =  forecast(fit_arima, h=24, ,level=c(95))
autoplot(fcst)
fcst =  forecast(fit_arima, h=24,level=c(95))
autoplot(fcst)
